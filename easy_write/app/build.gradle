plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp' version '1.8.0-1.0.8'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.8.21'
}

android {
    namespace Ext.appId
    compileSdk Ext.compileSdk

    defaultConfig {
        applicationId Ext.appId
        minSdk Ext.minSdk
        targetSdk Ext.targetSdk
        versionCode Ext.versionCode
        versionName Ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        ksp {
            arg('room.schemaLocation', "$projectDir/schemas")
        }
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86_64"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    buildFeatures {
        dataBinding true
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    implementation 'androidx.compose.material:material:1.6.2'
    def compose_version = Ext.composeVersion

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.compose.material3:material3:1.1.0-alpha03'
    implementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    testApi 'junit:junit:4.13.2'
    androidTestApi 'androidx.test.ext:junit:1.1.5'
    androidTestApi 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'com.squareup.retrofit2:retrofit:2.11.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.11.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.11.0'
    //RxJava的依赖包
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    //RxAndroid的依赖包
    implementation 'io.reactivex.rxjava3:rxjava:3.0.0'
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'
    implementation 'com.github.thomas-bouvier:persistent-cookie-jar-okhttp:1.0.2'
    //glide4.11.0的依赖包
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    implementation 'com.github.jaikeerthick:Composable-Graphs:v1.2.1'

    implementation 'com.github.guolindev:LitePal:8ad8322'

    // CameraX core library using the camera2 implementation
    def camerax_version = "1.3.0-alpha04"
    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    // If you want to additionally use the CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    // If you want to additionally use the CameraX View class
    implementation "androidx.camera:camera-view:${camerax_version}"

    implementation "com.google.accompanist:accompanist-permissions:0.29.1-alpha"

    implementation 'com.guolindev.permissionx:permissionx:1.7.1'

    debugImplementation 'com.guolindev.glance:glance:1.1.0'

    //noinspection GradleDependency
    implementation 'androidx.compose.material:material-icons-extended:1.4.0-beta02'

    implementation("io.coil-kt:coil-compose:2.2.2")

    //noinspection GradleDependency
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'

    implementation "com.leinardi.android:speed-dial.compose:2.0.0-alpha01"

    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.0"


    implementation 'com.github.Justson.AgentWeb:agentweb-core:v5.0.6-androidx'

    def room_version = "2.5.0"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // To use Kotlin Symbol Processing (KSP)
    ksp "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-paging:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    //替代GSON，因为GSON不支持kotlin空安全
    implementation("com.squareup.moshi:moshi-kotlin:1.14.0")
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"

    implementation 'com.github.qichuan:android-opencc:1.2.0'

    def paging_version = "3.1.1"
    implementation "androidx.paging:paging-runtime:$paging_version"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    implementation "androidx.paging:paging-compose:1.0.0-alpha18"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.6.0"

    implementation("com.marosseleng.android:compose-material3-datetime-pickers:0.7.0")

    implementation("com.github.wilinz.ComposePreferences:preferences-material3:0.1.7")
    // Optional - Easy access to preferences from modules without compose dependency
    implementation("com.github.wilinz.ComposePreferences:datastore-manager:0.1.7")

    implementation "androidx.datastore:datastore-preferences:1.0.0"

    implementation "com.github.skydoves:colorpickerview:2.2.4"

    ksp("com.squareup.moshi:moshi-kotlin-codegen:1.14.0")

    def ktor_version = "2.2.4"
    implementation("io.ktor:ktor-client-core:$ktor_version")
    implementation("io.ktor:ktor-client-cio:$ktor_version")
    implementation("io.ktor:ktor-client-android:$ktor_version")

    implementation "com.google.accompanist:accompanist-placeholder-material:0.30.0"
    implementation 'com.github.AAChartModel:AAChartCore-Kotlin:7.4.0'

    implementation "io.noties.markwon:core:4.6.2"

    implementation("net.sourceforge.jeval:jeval:0.9.4")

    implementation("net.lingala.zip4j:zip4j:2.11.5")

    implementation("com.github.doyaaaaaken:kotlin-csv-jvm:1.8.0")

    implementation "com.anggrayudi:storage:1.5.4"

    implementation("com.google.mlkit:text-recognition:16.0.0-beta6")
    implementation("com.google.mlkit:text-recognition-chinese:16.0.0-beta6")

    implementation 'com.tencent.bugly:crashreport:4.1.9.2'

    implementation 'com.google.mlkit:object-detection:17.0.0'

    implementation 'com.github.wilinz:AccessibilityX:0.0.3'

//    implementation project(':flutter')
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.1")
    implementation("io.ktor:ktor-client-content-negotiation:$ktor_version")
    implementation("io.ktor:ktor-serialization-kotlinx-json:$ktor_version")
    implementation("io.ktor:ktor-client-auth:$ktor_version")
    implementation("io.ktor:ktor-client-logging:$ktor_version")
}